If you're using Azure Cloud Shell, you don't need to install the Azure CLI or extensions as they are pre-installed.

When creating an Azure ML workspace, resources like Storage Account, Key Vault, and Log Analytics Workspace are created automatically.

Workspace settings and defaults can be configured for ease, such as setting a default workspace with the command: az configure --defaults workspace="aml-project-dev".

Remarks:
Azure Machine Learning supports two types of compute:
Compute Instance - A virtual machine to run your experiments.
Compute Cluster - A managed compute environment with auto-scaling.

Autologging is supported for the following libraries:
1.	Scikit-learn
2.	TensorFlow and Keras
3.	XGBoost
4.	LightGBM
5.	Spark
6.	Fastai
7.	Pytorch

Depending on the type of value you want to log, use the MLflow command to store the metric with the experiment run:
•	mlflow.log_param(): Log single key-value parameter. Use this function for an input parameter you want to log.
•	mlflow.log_metric(): Log single key-value metric. Value must be a number. Use this function for any output you want to store with the run.
•	mlflow.log_artifact(): Log a file. Use this function for any plot you want to log, save as image file first.

After creating an endpoint in the Azure Machine Learning workspace, you can deploy a model to that endpoint. To deploy your model to a managed online endpoint, you need to specify four things:
•	Model assets like the model pickle file, or a registered model in the Azure Machine Learning workspace.
•	Scoring script that loads the model.
•	Environment which lists all necessary packages that need to be installed on the compute of the endpoint.
•	Compute size and scale settings to ensure you can handle the amount of requests the endpoint will receive.

Include the following parameters in the YAML configuration to create a managed online endpoint:
•	name: Name of the endpoint. Must be unique in the Azure region.
•	traffic: (Optional) Percentage of traffic from the endpoint to divert to each deployment. Sum of traffic values must be 100.
•	auth_mode: Use key for key-based authentication. Use aml_token for Azure Machine Learning token-based authentication.

Next to the script, specify component features like:
•	Name: Describe what the purpose of the component's script for easy searchability.
•	Expected input: Set the input parameters like an input dataset or numerical value.
•	Output: Any artifacts generated by the script that you want to save.
•	Version: Allows you to update the component when the script is updated, while still maintaining previous versions.
•	Distribution: Specify how you want to distribute the execution of your script.

To create a component, you need two files:
•	A script: Provides the actual code you want to execute.
•	A YAML file: Specifies the metadata of the component, the inputs and outputs, and the compute environment needed to execute the script


Error Solutions:
Error when using Cloud Shell:
Issue: Azure CLI commands may fail if dependencies aren’t installed.
Solution: Ensure the Azure ML extension is installed with the command az extension add -n ml -y or use Cloud Shell where it’s pre-installed.

Error: Workspace creation failed or didn’t complete properly:
Issue: A failed deployment may cause workspace or resource issues.
Solution: Verify the status of resource creation using the Azure portal or use the az ml workspace show command to get the current status of the workspace.

Error when downloading job-related files:
Issue: az ml job download may fail if the wrong run ID is provided.
Solution: Verify the correct job ID or use the Azure portal to find the job's details.

"Not Registered" Issue: Fixed by registering the Microsoft.MachineLearningServices resource provider: `az provider register --namespace Microsoft.MachineLearningServices`
Documentation: https://learn.microsoft.com/en-us/azure/azure-resource-manager/troubleshooting/error-register-resource-provider?tabs=azure-cli 

"Failed to connect to MSI" (Not fixed) Issue: 
Encountered error: `Failed to connect to MSI. Please make sure MSI is configured correctly. Get Token request returned: <Response [400]>`. 
Verified access, and I can manage all resources. Tried with `--identity system`, but issue persists.
